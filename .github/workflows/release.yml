name: Generate Release

on:
  push:
    branches:
      - master
      - beta
      - "[0-9]+.[0-9x]+"
      - "[0-9]+.[0-9x]+.x"

env:
  node-version: "12.x"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Increase watchers to fix docker
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node-version }}

      - name: Get Yarn cache dir
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        id: cache-yarn
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --prefer-offline --frozen-lockfile --silent

      - name: Start test
        run: yarn test --forceExit --silent --onlyChanged

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v1
        with:
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_committer_name: ${{ secrets.GIT_NAME }}
          git_committer_email: ${{ secrets.GIT_EMAIL }}
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Determine version, generate notes, publish tag and release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_EMAIL }}
