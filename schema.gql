#
# Fragments
#
fragment UserFragment on User {
  id
  name
  email
  role
  pictureUri
  publicKey
  isFollowingMe
  isFollowedByMe
}

fragment RoomFragment on Room {
  id
  name
  pictureUri
}

#
# User
#
mutation CreateAccount($data: CreateAccountInput!) {
  createAccount(data: $data) {
    user {
      ...UserFragment
    }
    token
  }
}

mutation SignIn($data: SignInInput!) {
  signIn(data: $data) {
    user {
      ...UserFragment
      derivedSalt
    }
    token
  }
}

mutation ForgotPassword($data: ForgotPasswordInput!) {
  forgotPassword(data: $data)
}

mutation ChangePassword($data: ChangePasswordInput!) {
  changePassword(data: $data)
}

query Me {
  me {
    ...UserFragment
    lastAccessAt
    createdAt
  }
}

query ListUsers($where: ListUsersWhere, $order: ListUsersOrder, $skip: Int, $take: Int) {
  listUsers(where: $where, order: $order, skip: $skip, take: $take) {
    ...UserFragment
  }
}

#
# Room
#
mutation CreateRoom($data: CreateRoomInput!) {
  createRoom(data: $data) {
    ...RoomFragment
    members {
      ...UserFragment
    }
  }
}

query GetRooms {
  getRooms {
    ...RoomFragment
    lastMessage {
      id
      cipher
      type
      createdAt
      sentAt
      sender {
        ...UserFragment
      }
      readReceipts {
        id
        user {
          id
        }
        receivedAt
        seenAt
      }
    }
    members {
      ...UserFragment
    }
  }
}

subscription RoomCreated {
  roomCreated {
    id
    name
    pictureUri
    lastMessage {
      id
      cipher
      type
      createdAt
      sentAt
      sender {
        id
        name
        email
        role
        pictureUri
        publicKey
      }
      readReceipts {
        id
        user {
          id
        }
        receivedAt
        seenAt
      }
    }
    members {
      id
      name
      email
      role
      pictureUri
      publicKey
    }
  }
}

#
# Message
#
mutation CreateMessage($data: CreateMessageInput!) {
  createMessage(data: $data) {
    id
  }
}

query GetMessages($roomId: ID, $limit: Int, $afterDate: Timestamp) {
  getMessages(roomId: $roomId, limit: $limit, afterDate: $afterDate) {
    hasMore
    cursor
    items {
      id
      cipher
      type
      sender {
        ...UserFragment
      }
      createdAt
    }
  }
}

subscription MessageCreated($roomIds: [ID]) {
  messageCreated(roomIds: $roomIds) {
    id
    cipher
    type
    createdAt
    sentAt
    sender {
      id
      name
      email
      role
      pictureUri
      publicKey
    }
    room {
      id
      name
      pictureUri
    }
    readReceipts {
      id
      user {
        id
      }
      receivedAt
      seenAt
    }
  }
}

subscription ReadReceiptCreated($roomIds: [ID]) {
  readReceiptCreated(roomIds: $roomIds) {
    id
    user {
      id
    }
    message {
      id
    }
    room {
      id
    }
    receivedAt
    seenAt
  }
}

#
# Notification
#
mutation RegisterDevice($data: RegisterDeviceInput!) {
  registerDevice(data: $data)
}
mutation UnregisterDevice($data: RegisterDeviceInput!) {
  unregisterDevice(data: $data)
}

#
# Sync
#
query PullChanges($lastPulledAt: Float) {
  pullChanges(lastPulledAt: $lastPulledAt) {
    timestamp
    changes
  }
}

mutation PushChanges($changes: JSON, $lastPulledAt: Float) {
  pushChanges(changes: $changes, lastPulledAt: $lastPulledAt)
}

subscription ShouldSync($roomIds: [ID!]) {
  shouldSync(roomIds: $roomIds)
}
